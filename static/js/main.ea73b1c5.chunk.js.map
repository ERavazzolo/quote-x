{"version":3,"sources":["img/spinner.gif","components/Quote.js","components/Button.js","components/Error.js","components/Spinner.js","App.js","index.js"],"names":["module","exports","Quote","quote","this","props","author","className","Component","defaultProps","Button","onClick","getQuote","Error","Spinner","src","require","alt","App","state","hasError","isLoading","bind","handleClick","setState","axios","get","result","data","quoteText","quoteAuthor","outcome","ReactDOM","render","document","getElementById"],"mappings":"gIAAAA,EAAOC,QAAU,IAA0B,qC,oLCIrCC,E,iLAOE,IAAIC,EAAQC,KAAKC,MAAMF,MAEnBG,EAASF,KAAKC,MAAMC,OAKxB,MAJc,KAAXA,IACCA,EAAS,WAIT,yBAAKC,UAAU,eACX,uBAAGA,UAAU,YAAb,IAA2BJ,EAA3B,KACA,0BAAMI,UAAU,iBAAhB,KAAoCD,Q,GAjBhCE,aAAdN,EACKO,aAAe,CAClBN,MAAO,0EACPG,OAAQ,mBA2BDJ,QCdAQ,E,iLAbP,OACI,kBAAC,WAAD,KACI,4BAAQC,QAASP,KAAKC,MAAMO,SAAUL,UAAU,OAAhD,yB,GALKC,aCWNK,E,iLATP,OACI,6BACI,wBAAIN,UAAU,iBAAd,oC,GALIC,aCULM,E,iLARP,OACI,kBAAC,WAAD,KACI,yBAAKP,UAAU,UAAUQ,IAAKC,EAAQ,IAA8BC,IAAI,iB,GAJlET,aCsEPU,E,YAhEb,WAAYb,GAAQ,IAAD,8BACjB,4CAAMA,KACDc,MAAQ,CACXhB,MAAO,GACPG,OAAQ,GACRc,UAAU,EACVC,WAAW,GAEb,EAAKT,SAAW,EAAKA,SAASU,KAAd,gBAChB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBATF,E,iFAajBlB,KAAKQ,a,iKAKHR,KAAKoB,SAAS,CAAEH,WAAW,I,SAERI,IAAMC,IAAI,8G,OAAzBC,E,OACJvB,KAAKoB,SAAS,CACZrB,MAAOwB,EAAOC,KAAKC,UACnBvB,OAAQqB,EAAOC,KAAKE,YACpBT,WAAW,I,gDAGbjB,KAAKoB,SAAS,CACZJ,UAAU,EACVC,WAAW,I,mJAMfjB,KAAKQ,a,+BAGG,IAKJmB,EAJE5B,EAAUC,KAAKe,MAAfhB,MACAG,EAAWF,KAAKe,MAAhBb,OACAe,EAAcjB,KAAKe,MAAnBE,UAeN,OAXEU,EADE3B,KAAKe,MAAMC,SAEX,kBAAC,EAAD,MAGA,yBAAKb,UAAU,OACb,wBAAIA,UAAU,gBAAd,qBACA,kBAAC,EAAD,CAAQK,SAAUR,KAAKmB,cACtBF,EAAY,kBAAC,EAAD,MAAc,kBAAC,EAAD,CAAOlB,MAAOA,EAAOG,OAAQA,KAK5D,kBAAC,WAAD,KACGyB,O,GA3DSvB,a,MCHlBwB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ea73b1c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.716c13bd.gif\";","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Quote extends Component {\r\n    static defaultProps = {      // display default props if data doesn't come back but there is no error in fetching\r\n        quote: 'Stay away from negative people. They have a problem for every solution.',\r\n        author: 'Albert Einstein'\r\n    }\r\n\r\n    render() {\r\n        let quote = this.props.quote;\r\n\r\n        let author = this.props.author;\r\n        if(author === '') {\r\n            author = 'Unknown';\r\n        }\r\n\r\n        return (\r\n            <div className=\"quote-block\">\r\n                <p className=\"quote__p\">\"{ quote }\"</p>\r\n                <span className=\"quote__author\">- { author }</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// PropTypes\r\nQuote.propTypes = {\r\n    quote: PropTypes.string.isRequired,\r\n    author: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Quote;","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Button extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <Fragment>\r\n                <button onClick={this.props.getQuote} className=\"btn\">Get a new quote!</button>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n// PropTypes\r\nButton.propTypes = {\r\n    getQuote: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Button;","import React, { Component } from 'react';\r\n\r\n\r\nclass Error extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"quote_heading\">Oops! Something went wrong!</h1>\r\n            </div>\r\n        );        \r\n    }\r\n}\r\n\r\n\r\nexport default Error;","import React, { Component, Fragment } from 'react';\r\n\r\n\r\nclass Spinner extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <img className=\"spinner\" src={require('../../src/img/spinner.gif')} alt=\"waiting\" />\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Spinner;","import React, { Component, Fragment } from 'react';\nimport axios from 'axios';\n\nimport Quote from './components/Quote';\nimport Button from './components/Button';\nimport Error from './components/Error';\nimport Spinner from './components/Spinner';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quote: '',\n      author: '',\n      hasError: false,\n      isLoading: false,\n    };\n    this.getQuote = this.getQuote.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.getQuote();\n  }\n\n  async getQuote() {\n    try {\n      this.setState({ isLoading: true });\n\n      let result = await axios.get('https://cors-anywhere.herokuapp.com/http://api.forismatic.com/api/1.0/?method=getQuote&format=json&lang=en');\n      this.setState({\n        quote: result.data.quoteText,\n        author: result.data.quoteAuthor,\n        isLoading: false\n      })\n    } catch (error) {\n      this.setState({\n        hasError: true,\n        isLoading: false\n      })\n    }\n  }\n\n  handleClick() {\n    this.getQuote();\n  }\n\n  render() {\n    let { quote } = this.state;\n    let { author } = this.state;\n    let { isLoading } = this.state;\n\n    let outcome;\n    if (this.state.hasError) {\n      outcome =\n        <Error />\n    } else {\n      outcome =\n        <div className=\"App\">\n          <h1 className=\"app__heading\">Welcome to QuoteX</h1>\n          <Button getQuote={this.handleClick} />\n          {isLoading ? <Spinner /> : <Quote quote={quote} author={author} />}\n        </div>\n    }\n\n    return (\n      <Fragment>\n        {outcome}\n      </Fragment>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./App.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}